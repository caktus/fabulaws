[program:{{ environment }}-server]
process_name=%(program_name)s
command={{ virtualenv_root }}/bin/newrelic-admin run-program {{ virtualenv_root }}/bin/gunicorn --bind="127.0.0.1:{{ server_port }}" --workers={{ worker_count }} --worker-class=sync {{ wsgi_app }}
directory={{ code_root }}
user={{ webserver_user }}
autostart=false
autorestart=true
stdout_logfile={{ log_dir }}/gunicorn.log
redirect_stderr=true
environment=NEW_RELIC_CONFIG_FILE='{{ services }}/newrelic-{{ environment }}-web.ini'

[program:{{ environment }}-celeryd-counts]
command={{ virtualenv_root }}/bin/newrelic-admin run-program {{ virtualenv_root }}/bin/python {{ code_root }}/manage.py celeryd -c 1 -Q counts --loglevel=INFO -E --pidfile=/tmp/{{ project }}-{{ environment }}-celeryd-counts.pid
directory={{ project_root }}
user={{ webserver_user }}
numprocs=1
autostart=false
autorestart=true
stdout_logfile={{ log_dir }}/celeryd-counts.log
redirect_stderr=true
startsecs=10
; Need to wait for currently executing tasks to finish at shutdown.
; Increase this if you have very long running tasks.
stopwaitsecs = 600
; if rabbitmq is supervised, set its priority higher
; so it starts first
priority=998
environment=NEW_RELIC_CONFIG_FILE='{{ services }}/newrelic-{{ environment }}-celery.ini'

[program:{{ environment }}-celeryd-xmlgen]
command={{ virtualenv_root }}/bin/newrelic-admin run-program {{ virtualenv_root }}/bin/python {{ code_root }}/manage.py celeryd -c 1 -Q xmlgen --maxtasksperchild=1 --loglevel=INFO -E --pidfile=/tmp/{{ project }}-{{ environment }}-celeryd-xmlgen.pid
directory={{ project_root }}
user={{ webserver_user }}
numprocs=1
autostart=false
autorestart=true
stdout_logfile={{ log_dir }}/celeryd-xmlgen.log
redirect_stderr=true
startsecs=10
; Need to wait for currently executing tasks to finish at shutdown.
; Increase this if you have very long running tasks.
stopwaitsecs = 600
; if rabbitmq is supervised, set its priority higher
; so it starts first
priority=998
environment=NEW_RELIC_CONFIG_FILE='{{ services }}/newrelic-{{ environment }}-celery.ini'

[program:{{ environment }}-celeryd-stats]
command={{ virtualenv_root }}/bin/newrelic-admin run-program {{ virtualenv_root }}/bin/python {{ code_root }}/manage.py celeryd -c 1 -Q stats --maxtasksperchild=1 --loglevel=INFO -E --pidfile=/tmp/{{ project }}-{{ environment }}-celeryd-stats.pid
directory={{ project_root }}
user={{ webserver_user }}
numprocs=1
autostart=false
autorestart=true
stdout_logfile={{ log_dir }}/celeryd-stats.log
redirect_stderr=true
startsecs=10
; Need to wait for currently executing tasks to finish at shutdown.
; Increase this if you have very long running tasks.
stopwaitsecs = 600
; if rabbitmq is supervised, set its priority higher
; so it starts first
priority=998
environment=NEW_RELIC_CONFIG_FILE='{{ services }}/newrelic-{{ environment }}-celery.ini'

[program:{{ environment }}-celeryd]
command={{ virtualenv_root }}/bin/newrelic-admin run-program {{ virtualenv_root }}/bin/python {{ code_root }}/manage.py celeryd -c 10 -Q celery --maxtasksperchild=1 --loglevel=INFO -E --pidfile=/tmp/{{ project }}-{{ environment }}-celeryd.pid
directory={{ project_root }}
user={{ webserver_user }}
numprocs=1
autostart=false
autorestart=true
stdout_logfile={{ log_dir }}/celeryd.log
redirect_stderr=true
startsecs=10
; Need to wait for currently executing tasks to finish at shutdown.
; Increase this if you have very long running tasks.
stopwaitsecs = 600
; if rabbitmq is supervised, set its priority higher
; so it starts first
priority=998
environment=NEW_RELIC_CONFIG_FILE='{{ services }}/newrelic-{{ environment }}-celery.ini'

[program:{{ environment }}-celerybeat]
command={{ virtualenv_root }}/bin/python {{ code_root }}/manage.py celerybeat --schedule=/tmp/{{ project }}-{{ environment }}-celerybeat-schedule --loglevel=INFO --pidfile=/tmp/{{ project }}-{{ environment }}-celerybeat.pid
directory={{ project_root }}
user={{ webserver_user }}
numprocs=1
autostart=false
autorestart=true
stdout_logfile={{ log_dir }}/celerybeat.log
redirect_stderr=true
startsecs=10
; if rabbitmq is supervised, set its priority higher
; so it starts first
priority=999


[program:{{ environment }}-celerycam]
command={{ virtualenv_root }}/bin/python {{ code_root }}/manage.py celerycam --pidfile=/tmp/{{ project }}-{{ environment }}-celerycam.pid
directory={{ project_root }}
user={{ webserver_user }}
numprocs=1
autostart=false
autorestart=true
stdout_logfile={{ log_dir }}/celerycam.log
redirect_stderr=true
startsecs=10
; if rabbitmq is supervised, set its priority higher
; so it starts first
priority=999

[program:{{ environment }}-stunnel]
command=/usr/bin/stunnel4 {{ services }}/stunnel/{{ environment }}.conf
directory={{ home }}
user={{ webserver_user }}
numprocs=1
autostart=false
autorestart=true
stdout_logfile={{ log_dir }}/stunnel.log
redirect_stderr=true
startsecs=10
; if rabbitmq is supervised, set its priority higher
; so it starts first
priority=1000

[program:{{ environment }}-pgbouncer]
command=/usr/sbin/pgbouncer {{ services }}/pgbouncer/pgbouncer-{{ environment }}.ini
directory={{ home }}
user={{ webserver_user }}
numprocs=1
autostart=false
autorestart=true
stdout_logfile={{ log_dir }}/pgbouncer-stdout.log
redirect_stderr=true
startsecs=10
; if rabbitmq is supervised, set its priority higher
; so it starts first
priority=1001

; this group should be started on all web servers
[group:{{ environment }}-pgbouncer]
programs={{ environment }}-stunnel,{{ environment }}-pgbouncer

[group:{{ environment }}-web]
programs={{ environment }}-server

; this group should only be started on a single web server
[group:{{ environment }}-celery]
programs={{ environment }}-celerybeat,{{ environment }}-celerycam,{{ environment }}-celeryd,{{ environment }}-celeryd-counts,{{ environment }}-celeryd-xmlgen,{{ environment }}-celeryd-stats
